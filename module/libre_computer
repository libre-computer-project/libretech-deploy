#!/bin/bash
LIBRE_COMPUTER_VENDOR="LIBRE_COMPUTER"
LIBRE_COMPUTER_BASE_URL='https://distro.libre.computer/ci'
LIBRE_COMPUTER_DISTRO_RELEASE_VARIANT_XPATH='//a[not(@href="../") and not(starts-with(@href, "?"))]/text()'
LIBRE_COMPUTER_DISTRO_RELEASE_VARIANT_REGEX='s/\/$//'
LIBRE_COMPUTER_VARIANT_IGNORE="SHA512SUMS"
LIBRE_COMPUTER_checkInput(){
	:
}
LIBRE_COMPUTER_main(){
	LIBRE_COMPUTER_checkInput "$@"
	local distro=$1
	local release=$2
	local variant=$3
	local block_device=$4
	local path_url="$LIBRE_COMPUTER_BASE_URL"
	if [ ! -z "$distro" ]; then
		local path=("${@:1:2}")
		local path_uri=$(IFS=/; echo "${path[*]}")
		path_url="$path_url/$path_uri"
	fi
	local html=$(wget -O - "$path_url/")
	if [ $? -ne 0 ] || [ -z "$html" ]; then
		echo "$LIBRE_COMPUTER_VENDOR $@ is not supported." >&2
		return 1
	fi
	local results="$(echo "$html" | xmllint --html --xpath "$LIBRE_COMPUTER_DISTRO_RELEASE_VARIANT_XPATH" - 2>/dev/null)"
	if [ $? -ne 0 ] || [ -z "$results" ]; then
		echo "$LIBRE_COMPUTER_VENDOR $@ is not supported." >&2
		return 1
	fi
	local results="$(echo "$results" | sed "$LIBRE_COMPUTER_DISTRO_RELEASE_VARIANT_REGEX")"
	if [ -z "$release" ]; then
		echo "$results"
		return $LDP_AUTO
	fi
	if [ -z "$variant" ]; then
		local variants="$(echo "$results" | grep -v "$LIBRE_COMPUTER_VARIANT_IGNORE" | grep +$LDP_HW_BOARD)"
		if [ -z "$variants" ]; then
			local variants="$(echo "$results" | grep +$LDP_ARCH)"
		fi
		echo "$variants"
		return $LDP_AUTO
	fi
	local image="$(echo "$results" | grep "$variant" | grep +$LDP_HW_BOARD | head -n 1)"
	if [ -z "$image" ]; then
		local image="$(echo "$results" | grep "$variant" | grep +$LDP_ARCH | head -n 1)"
	fi
	if [ -z "$image" ]; then
		echo "$LIBRE_COMPUTER_VENDOR $@ is not supported." >&2
		exit 1
	fi

	local image_url="$path_url/$image"
	echo "Using image: $image_url" >&2
	if [ -z "$block_device" ]; then
		echo "$LDP_BLOCK_devices"
		return $LDP_AUTO
	elif [ -z "$(echo \"$LDP_BLOCK_devices\" | grep $block_device)" ]; then
		echo "$block_device is not in:" >&2
		echo "$LDP_BLOCK_devices" >&2
		exit 1
	fi
	LDP_BLOCK_flashURLRaw "$image_url" "$block_device"
	if [ ! -z "$LDP_GUI_RUN" ]; then
		rm "$LDP_GUI_RUN"
		unset LDP_GUI_RUN
	fi
}
