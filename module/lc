#!/bin/bash
LC_VENDOR="LC"
LC_BASE_URL='https://distro.libre.computer/ci'
LC_checkInput(){
	:
}
LC_main(){
	LC_checkInput "$@"
	local path=("${@:1:2}")
	local path=$(IFS=/; echo "${path[*]}")
	local path_url="$LC_BASE_URL/$path"
	local html=$(curl "$path_url/")
	if [ $? -ne 0 ]; then
		echo "$VENDOR $@ is not supported." >&2
		return 1
	fi
	local results="$(echo "$html" | xmllint --html --xpath '//a[not(@href="../") and not(starts-with(@href, "?"))]/text()' - 2>/dev/null)"
	if [ $? -ne 0 ] || [ -z "$results" ]; then
		echo "$VENDOR $@ is not supported." >&2
		return 1
	fi
	local results="$(echo "$results" | grep -v SHA256SUMS | sed 's/\/$//')"
	if [ -z "$2" ]; then
		echo "$results"
		return $LDP_AUTO
	fi
	if [ -z "$3" ]; then
		local variants="$(echo "$results" | grep +LDP_BOARD)"
		if [ -z "$variants" ]; then
			local variants="$(echo "$results" | grep +$LDP_ARCH)"
		fi
		echo "$variants"
		return $LDP_AUTO
	fi
	local image="$(echo "$results" | grep "$3" | grep +$LDP_BOARD | head -n 1)"
	if [ -z "$image" ]; then
		local image="$(echo "$results" | grep "$3" | grep +$LDP_ARCH | head -n 1)"
	fi
	if [ -z "$image" ]; then
		echo "$VENDOR $@ is not supported." >&2
		exit 1
	fi

	local image_url="$path_url/$image"
	echo "Using image: $image_url" >&2
	if [ -z "$4" ]; then
		echo "$LDP_BLOCK_devices"
		return $LDP_AUTO
	elif [ -z "$(echo \"$LDP_BLOCK_devices\" | grep $4)" ]; then
		echo "$4 is not in:"
		echo "$LDP_BLOCK_devices"
		exit 1
	fi
	LDP_BLOCK_flashURLRaw "$image_url" "$4"
	if [ ! -z "$LDP_GUI_RUN" ]; then
		rm "$LDP_GUI_RUN"
		unset LDP_GUI_RUN
	fi
}
