#!/bin/bash
DEBIAN_VENDOR="DEBIAN"
DEBIAN_BASE_URL='https://cdimage.debian.org/images/cloud'
DEBIAN_RELEASE_IGNORE="OpenStack\|stretch\|buster\|bullseye"
DEBIAN_VARIANT_IGNORE="azure\|ec2\|genericcloud\|nocloud"
DEBIAN_checkInput(){
	:
}
DEBIAN_main(){
	DEBIAN_checkInput "$@"
	local path=("${@:1:1}")
	local path=$(IFS=/; echo "${path[*]}")
	local path_url="$DEBIAN_BASE_URL/$path"
	if [ ! -z "$1" ]; then
		local path_url="$path_url/daily/latest"
	fi
	local html=$(curl "$path_url/")
	if [ $? -ne 0 ]; then
		echo "$VENDOR $@ is not supported." >&2
		return 1
	fi
	local results="$(echo "$html" | xmllint --html --xpath '//table[contains(@class, 'indexlist')]//td[contains(@class, 'indexcolname')]//a[not(@href="../") and not(starts-with(@href, "/"))]/text()' - 2>/dev/null | grep -v "$DEBIAN_RELEASE_IGNORE")"
	if [ $? -ne 0 ] || [ -z "$results" ]; then
		echo "$VENDOR $@ is not supported." >&2
		return 1
	fi
	local results="$(echo "$results" | grep -v SHA512SUMS | sed 's/\/$//')"
	if [ -z "$1" ]; then
		echo "$results"
		return $LDP_AUTO
	fi
	local results_arch=$(echo "$results" | grep -v "$DEBIAN_VARIANT_IGNORE" | grep \\-$LDP_ARCH | grep '\.tar\.')
	if [ -z "$2" ]; then
		echo "$results_arch" 
		return $LDP_AUTO
	fi
	local image="$(echo "$results_arch" | grep "$2" | head -n 1)"
	if [ -z "$image" ]; then
		echo "$VENDOR $@ is not supported." >&2
		exit 1
	fi
	local image_url="$path_url/$image"
	echo "Using image: $image_url" >&2
	if [ -z "$3" ]; then
		echo "$LDP_BLOCK_devices"
		return $LDP_AUTO
	elif [ -z "$(echo \"$LDP_BLOCK_devices\" | grep $3)" ]; then
		echo "$3 is not in:"
		echo "$LDP_BLOCK_devices"
		exit 1
	fi
	LDP_BLOCK_flashURLTar "$image_url" "$3"
	if [ ! -z "$LDP_GUI_RUN" ]; then
		rm "$LDP_GUI_RUN"
		unset LDP_GUI_RUN
	fi
}
